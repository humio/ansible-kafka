#jinja2: trim_blocks:False
broker.id={{ kafka_broker_id }}
broker.rack={{ kafka_broker_rack }}
zookeeper.connect={% for host in zookeeper_hosts -%}{{ host.ip }}:{{ host.port | default('2181') }}{% if not loop.last %},{% endif %}{%- endfor %}
listeners={% for listener in kafka_listeners -%}{{ listener.scheme | default('PLAINTEXT') }}://{{ listener.host | default('') }}:{{ listener.port | default('9092') }}{% if not loop.last %}, {% endif %}{%- endfor %}
replica.fetch.max.bytes=104857600
message.max.bytes=104857600
compression.type=producer

# This is the data directory. The service log directory is specified
# in the systemd unit file.
log.dirs={{ kafka_data_log_dir }}

log.retention.hours=48
log.retention.check.interval.ms=300000
unclean.leader.election.enable=false

# Official Kafka documentation states that when upgrading Kafka brokers, you must fix the inter.broker.protocol.version to the current/old version before upgrading the broker software. This way, all brokers in a cluster (being a mix of old and new broker software) will all communicate internally with the same protocol version. After all brokers have been upgraded to the new Kafka version, then inter.broker.protocol.version can be updated.
# More info can be found here: https://kafka.apache.org/22/documentation.html#upgrade
# Having this variable allows us to create playbooks where we can do the upgrade procedure described in the official Kafka documentation.
inter.broker.protocol.version={{ kafka_inter_broker_protocol_version }}
